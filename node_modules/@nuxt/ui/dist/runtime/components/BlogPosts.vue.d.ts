import type { AppConfig } from '@nuxt/schema';
import theme from '#build/ui/blog-posts';
import type { BlogPostProps } from '../types';
import type { ComponentConfig } from '../types/tv';
type BlogPosts = ComponentConfig<typeof theme, AppConfig, 'blogPosts'>;
export interface BlogPostsProps {
    /**
     * The element or component this component should render as.
     * @defaultValue 'div'
     */
    as?: any;
    posts?: BlogPostProps[];
    /**
     * The orientation of the blog posts.
     * @defaultValue 'horizontal'
     */
    orientation?: BlogPosts['variants']['orientation'];
    class?: any;
}
export interface BlogPostsSlots {
    default(props?: {}): any;
}
declare const _default: __VLS_WithSlots<import("vue").DefineComponent<BlogPostsProps, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<BlogPostsProps> & Readonly<{}>, {
    orientation: BlogPosts["variants"]["orientation"];
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>, BlogPostsSlots>;
export default _default;
type __VLS_WithSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
